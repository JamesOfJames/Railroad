<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteBuilding</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>parentStation</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// event_inherited();

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Shader

colorIn = shader_get_uniform(shColorReplaceBlend, "colorIn");
colorOut = shader_get_uniform(shColorReplaceBlend, "colorOut");
colorTolerance = shader_get_uniform(shColorReplaceBlend, "colorTolerance");
blend = shader_get_uniform(shColorReplaceBlend, "blend");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup

platform = noone;
grid = control.grid;

// Cargo list
cargo = ds_grid_create(6, 1);
ds_grid_clear(cargo, -1);
maxCargo = 8;

control.carCapacity += 4;

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup

ds_grid_destroy(cargo);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// uhh this is kinda dumb and hacky for now.

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bring up Station Cargo panel

panelStation.uiVisible = true;
scriptStationPanel(id, noone);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Cargo

/* so what does cargo need?

0 - type
  - later, name
  - later, car needed
    -&gt; this will currently be determined by type
1 - destination
  -&gt; station id
2 - $ value
3 - creation time
  -&gt; deliver it in half = 200% price, deliver it in double = 50%?
 - later, deadline
4 - number of cars (how big a load) [[ this becomes instance id when turned into train load.]]
5 - direction
  
*/
// a = how tall the grid is, and then what row we're working on
var a = ds_grid_height(cargo);
if (max(0, ds_grid_get_sum(cargo, 4, 1, 4, a - 1)) &lt; maxCargo)
{if !control.paused
{if instance_number(parentStation) &gt; 1
 {var b, c;

  ds_grid_resize(cargo, ds_grid_width(cargo), a + 1);
  // b = destination
  b = id;
  while (b == id)
  {b = instance_find(parentStation, irandom(instance_number(parentStation) - 1));}

  if (b.object_index != objectLab)
  {// Type
   ds_grid_set(cargo, 0, a, irandom(5) + 2); // coal is type 0, and artifacts are 1, so this won't generate that.
   // Destination
   ds_grid_set(cargo, 1, a, b);
   // Price
    ds_grid_set(cargo, 2, a, (irandom(10) + 1) * 100);
   // Current Time
   ds_grid_set(cargo, 3, a, get_timer());
   // # of cars
   ds_grid_set(cargo, 4, a, min(irandom(3) + 1, maxCargo - ds_grid_get_sum(cargo, 4, 1, 4, a)));
   // direction
   ds_grid_set(cargo, 5, a, scriptDirection(id, b));}
  else
  {// Type
   ds_grid_set(cargo, 0, a, 1); // aretifacts are type a, so this generates that.
   // Destination
   ds_grid_set(cargo, 1, a, b);
   // Price
    ds_grid_set(cargo, 2, a, 0);
   // Current Time
   ds_grid_set(cargo, 3, a, get_timer());
   // # of cars
   ds_grid_set(cargo, 4, a, min(1, maxCargo - ds_grid_get_sum(cargo, 4, 1, 4, a)));
   // direction
   ds_grid_set(cargo, 5, a, scriptDirection(id, b));}

  ds_grid_sort(cargo, 3, true);
/*  show_debug_message("station #" + id + " cargo list"); 
  var c;
  for (c = 1; c &lt;= a; c++)
  {show_debug_message("type " + ds_grid_get(cargo, 0, c) + ", destination " + ds_grid_get(cargo, 1, c) + ", $" + ds_grid_get(cargo, 2, c) + ", created " + ds_grid_get(cargo, 3, c) + ", qty " + ds_grid_get(cargo, 4, c));
  }*/}}}

alarm_set(0, room_speed * (irandom(15) + 5));
if (panelStation.uiVisible)
{if (panelStation.station == id)
 {scriptStationPanel(id, panelStation.engine);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup

ds_grid_destroy(cargo);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup

ds_grid_destroy(cargo);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Color Swap Shader

/*if( shader_is_compiled(sShaderDemo5) )
{shader_set(sShaderDemo5);

 // 1,1,1 = PURE white (each channel is 0 to 1)
 shader_set_uniform_f(colour_to_find, 1, 0, 1);       

 // 1,0,0 = red
 shader_set_uniform_f(colour_to_set, 0, 0, 1);
 
 draw_sprite(sprite_index,image_index,x, y);   
 shader_reset();}
 
*/

if( shader_is_compiled(shColorReplaceBlend) )
{

shader_set(shColorReplaceBlend);

 // 1,1,1,1 = PURE white (each RGBA channel is 0 to 1)
 shader_set_uniform_f(colorIn, 0, 1, 0, 1);       
 shader_set_uniform_f(colorOut, 1, 0, 0, 1);
 shader_set_uniform_f(colorTolerance, 0.1, 0.1, 1, 1); 
 shader_set_uniform_f(blend, 1); 

 draw_sprite(sprite_index, image_index, x, y);   
 shader_reset();}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// how large is the cargo/load grid?

//draw_text(x, y, string(ds_grid_height(cargo)));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var a, b;
b="";
for (a = 0; a &lt; ds_grid_height(cargo); a++)
{b += string(ds_grid_get(cargo, 0, a) + ", ");}
draw_text(x, y + 32, b);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
