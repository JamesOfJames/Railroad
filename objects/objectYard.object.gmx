<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spriteYard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>parentTrack</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// event_inherited();

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup

grid = control.grid;
control.carCapacity += 16;

/// Don't animate

platform = false;

image_speed = 0;

draw[0] = false;
draw[1] = false;
draw[2] = false;
draw[3] = false;
draw[4] = false;
draw[5] = false;
draw[6] = false;
draw[7] = false;
draw[8] = false;
draw[9] = false;

// Which Frames to show?
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Which frames?  Platform?  Clear grid cells

grid*=2;
  
// What frames to show
// Right
if position_meeting(x + grid, y, parentTrack)
{draw[0] = true;
 if position_meeting(x, y - grid, parentTrack)
 {draw[4] = true;
  draw[0] = false;}
 if position_meeting(x - grid, y, parentTrack)
 {draw[8] = true;
  draw[0] = false;}
 if position_meeting(x, y + grid, parentTrack)
 {draw[7] = true;
  draw[0] = false;}}

// Top
if position_meeting(x, y - grid, parentTrack)
{draw[1] = true;
 if position_meeting(x - grid, y, parentTrack)
 {draw[5] = true;
  draw[1] = false;}
 if position_meeting(x, y + grid, parentTrack)
 {draw[9] = true;
  draw[1] = false;}
 if position_meeting(x + grid, y, parentTrack)
 {draw[4] = true;
  draw[1] = false;}}
  
// Left
if position_meeting(x - grid, y, parentTrack)
{draw[2] = true;
 if position_meeting(x + grid, y, parentTrack)
 {draw[8] = true;
  draw[2] = false;}
 if position_meeting(x, y - grid, parentTrack)
 {draw[5] = true;
  draw[2] = false;}
 if position_meeting(x, y + grid, parentTrack)
 {draw[6] = true;
  draw[2] = false;}}

// Bottom
if position_meeting(x, y + grid, parentTrack)
{draw[3] = true;
 if position_meeting(x + grid, y, parentTrack)
 {draw[7] = true;
  draw[3] = false;}
 if position_meeting(x, y - grid, parentTrack)
 {draw[9] = true;
  draw[3] = false;}
 if position_meeting(x - grid, y, parentTrack)
 {draw[6] = true;
  draw[3] = false;}}

grid/=2;

// MP Grid clearing
mp_grid_clear_rectangle(control.mpGrid, x, y, x, y);

if draw[0]
{mp_grid_clear_rectangle(control.mpGrid, x, y, x + (2 * grid), y);}
if draw[1]
{mp_grid_clear_rectangle(control.mpGrid, x, y - (2 * grid), x, y);}
if draw[2]
{mp_grid_clear_rectangle(control.mpGrid, x - (2 * grid), y, x, y);}
if draw[3]
{mp_grid_clear_rectangle(control.mpGrid, x, y, x, y + (2 * grid));}
if draw[4]
{mp_grid_clear_rectangle(control.mpGrid, x, y, x + (2 * grid), y);
 mp_grid_clear_rectangle(control.mpGrid, x, y - (2 * grid), x, y);}
if draw[5]
{mp_grid_clear_rectangle(control.mpGrid, x, y - (2 * grid), x, y);
 mp_grid_clear_rectangle(control.mpGrid, x - (2 * grid), y, x, y);}
if draw[6]
{mp_grid_clear_rectangle(control.mpGrid, x - (2 * grid), y, x, y);
 mp_grid_clear_rectangle(control.mpGrid, x, y, x, y + (2 * grid));}
if draw[7]
{mp_grid_clear_rectangle(control.mpGrid, x, y, x + (2 * grid), y);
 mp_grid_clear_rectangle(control.mpGrid, x, y, x, y + (2 * grid));}
if draw[8]
{mp_grid_clear_rectangle(control.mpGrid, x, y, x + (2 * grid), y);
 mp_grid_clear_rectangle(control.mpGrid, x - (2 * grid), y, x, y);}
if draw[9]
{mp_grid_clear_rectangle(control.mpGrid, x, y - (2 * grid), x, y);
 mp_grid_clear_rectangle(control.mpGrid, x, y, x, y + (2 * grid));}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Frames

var a;
for (a = 0; a &lt; 10; a++)
{if draw[a]
 {draw_sprite(spriteYard, a, x, y);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
